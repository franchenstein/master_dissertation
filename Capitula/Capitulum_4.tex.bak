\chapter{Simulação de Correção de Manchas de Erros em Arranjos Bi\-di\-men\-si\-o\-na\-is}\label{cap:correcao}


{\lettrine[loversize=0.25,findent=0.2em,nindent=0em]{M}{anchas} de erros atuam em sistemas que utilizam matrizes para armazenar os \emph{bits} de informação, como o sistema de armazenamento e transmissão de imagem, os sistemas de fitas magnéticas, os \emph{chips}, entre outros \cite{art:Rocha}. A correção dessas manchas de erros foi investigada por vários autores,  que consideram determinada forma \cite{art:Farrel-1} e \cite{art:Kauffman-1}, ou comprimento dos vetores que compõem as manchas \cite{art:Blaum-1} \cite{art:EtzionVardy-1} que atacam a matriz de informação. Entre os trabalhos desenvolvidos nesta área pode-se referenciar Almeida e Palazzo \cite{art:Almeida}, que introduziram o uso de reticulados na correção de manchas, e Rocha \cite{art: Rocha}, que derivou as condições para o desenvolvimento do simples entrelaçamento (apenas em uma dimensão), em que a correção é efetuada por meio do uso de códigos corretores de erros aleatórios sobre uma dimensão do arranjo.

Esta dissertação é uma aplicação do que foi desenvolvido em \cite{art:Rocha1}, em que é aplicado entrelaçamento e código corrretor de erros em surto apenas em uma dimensão do arranjo. Outras técnicas que usam códigos corretores em duas dimensões \cite{art:Schwartz} \cite{art:Etzion-1} podem ser empregadas para a correção de manchas em arranjos bidimensionais. Os blocos que compõem o sistema desenvolvido implementados com o uso do programa Matlab$^{\circledR}$,  foram introduzidos no Capítulo ~\ref{cap:introdução}. Neste capítulo são apresentados os resultados e o desenvolvimento do trabalho.

\section{Sistema Desenvolvido}\label{sec:sistemadesenvolvido}

Para avaliar o uso do sistema considerou-se imagens extraídas de \cite{imagem :xxx} como fonte de informação. Imagens com resoluções de 128$\times$128 \emph{pixels} na escala de cinza foram convertidas para matrizes de dimensões 128$\times$128, cujos elementos são números decimais. Cada elemento da matriz foi convertido em sua representação binária com 8 \emph{bits}, resultando em matrizes binárias de dimensões 128$\times$1.024. Por sua vez, esta matriz binária é dividida em matrizes menores. Essa divisão é necessária para que o processo de codificação seja realizado. De modo a tornar as dimensões das matrizes divisíveis pelos parâmetros do código cíclico binário linear $C(n,k)$, foi feito um preenchimento com zeros nas últimas linhas e ou colunas da matriz original. Obtendo um número inteiro de blocos a serem enviados pelo canal. O procedimento a seguir descreve o envio de um bloco obtido da matriz da imagem binária.

 Um bloco de informação é representado por uma matriz $\mathbf{U_{n \times k}}$. As linhas da matriz $\mathbf{U_{n \times k}}$ são codificadas por um codificador sistemático de determinado código cíclico $C(n,k)$, como o da Figura ~\ref{fig:figuracodificador}, resultando na matriz $\mathbf{V_{n \times n}}$. Em seguida essa matriz é entrelaçada conforme descrito na Seção ~\ref{sec:entrelacador} e origina a matriz $\mathbf{V^*_{n \times n}}$. A nova matriz $\mathbf{V^*_{n \times n}}$ é considerada a matriz transmitida e a ela é adicionada uma mancha de erro. O tamanho e forma da moldura da mancha podem ser escolhidos aleatoriamente pelo sistema ou determinados pelo usuário. Dentre os tipos avaliados encontram-se moldura na forma quadrada, retangular ou cruz. A criação das manchas é detalhada na Seção ~\ref{sec:geramancha}. Esta mancha é somada módulo 2 aleatoriarmente à $\mathbf{V^*_{n \times n}}$, por meio da escolha de um elemento da matriz que demarca o início da região a ser afetada pela mancha. A Seção ~\ref{sec:geramancha} ilustra exemplos dessa soma.

A matriz resultante da adição da mancha é considerada como a matriz recebida $\mathbf{R^{\ast}_{n \times n}}$ pelo sistema. Essa matriz $\mathbf{R^{\ast}_{n \times n}}$ é desentrelaçada resultando na matriz $\mathbf{R_{n \times n}}$. Após isso, cada linha de $\mathbf{R_{n \times n}}$ é decodificada pelo decodificador armadilha para erros em surtos do código cíclico $C(n,k)$,como o da Figura ~\ref{fig:figuradecfixo}, resultando na matriz $\mathbf{\hat{U}_{n \times k}}$.

 Os blocos são enviados em sequência e uma vez finalizado o envio de todos os blocos da matriz informação da imagem, tem-se, após a remoção dos zeros adicionados, uma matriz binária de dimensões 128$\times$1024. Feito o devido agrupamento de 8 \emph{bits} dos seus elementos constrói-se uma matriz com dimensões 128$\times$128 composta de elementos decimais. Após isso a imagem pode ser reconstruída, finalizando seu envio. Na Figura ~\ref{fig:esquemaumbloco} é apresentado o esquema de envio de um bloco de informação com a identificação das matrizes ao longo de cada etapa. No fim do envio de todos os blocos da imagem tem-se que um total de manchas inseridas na matriz binária da imagem.

\begin{figure}[!h]
\center
\includegraphics[scale=0.8]{sistemadesenvolvido.eps}
\caption{Esquema de transmissão de um bloco da matriz de informação da imagem, supondo total eliminação dos erros adicionados à imagem.}
\label{fig:esquemaumbloco}
\end{figure}


 Na descrição anterior, cada mancha se aloca em um bloco específico a ser enviado. Foi feito um outro estudo em que um número de manchas específico é adicionado a matriz binária da imagem, codificada e entrelaçada. Da mesma forma que o processo anterior ocorre a divisão por blocos para a codificação e entrelaçamento, no entanto, é realizada a adição da quantidade específica de manchas em toda a matriz, podendo ocorrer sobreposição de manchas inclusive. Essa matriz recebida é então novamente dividida em blocos para ser desentrelaçada e decodificada, dando continuidade a construção da imagem recebida assim como anteriormente.


\section{Entrelaçador}\label{sec:entrelacador}

Cada elemento da matriz $\mathbf{V_{n \times n}}$ é representado por índices $(j,i)$ para $0 \leq i \leq n-1$ e $0 \leq j \leq n-1$. Considera-se os índices $i$ para as linhas e $j$ para as colunas de $\mathbf{V}$ respectivamente. Essa matriz é entrelaçada, deslocando os elementos da posição $(j,i)$ para $(j,j-i) \texttt{mod} \ n$. Essa transformação linear, dada por ~\ref{eq:transformacaoentrela}, é efetuada pela matriz apresentada em ~\ref{eq:matriznetrela}.

\begin{eqnarray}
(j,i)\mathbf{T}  =  (j, j-i)\texttt{mod} \ n = (j^{\prime},i^{\prime}).
          \label{eq:transformacaoentrela}
\end{eqnarray}


\begin{equation} \mathbf{T}=
 \begin{bmatrix}
  1  & 1   \\
  0 & -1   \\
 \end{bmatrix}.\label{eq:matriznetrela}
\end{equation}

{\color{white}.}\\

O Exemplo ~\ref{ex:entrelaçamento} mostra o entrelaçamento de uma matriz $\mathbf{V_{n \times n}}$, resultando na matriz $\mathbf{V^*_{n \times n}}$.

\begin{example}
\label{ex:entrelaçamento}
Entrelaçamento da matriz $\mathbf{V_{7 \times 7}}$ pela transformação linear da Equação ~\ref{eq:transformacaoentrela}.

Matriz Original
\begin{equation}\mathbf{V}=
 \begin{bmatrix}

\clubsuit_0 & \clubsuit_1 & \clubsuit_2 &	\clubsuit_3 &	\clubsuit_4 &	\clubsuit_5 & \clubsuit_6\\
\diamondsuit_0 & \diamondsuit_1 & \diamondsuit_2 &	\diamondsuit_3 &	\diamondsuit_4 &	\diamondsuit_5 & \diamondsuit_6\\
\spadesuit_0 & \spadesuit_1 &	\spadesuit_2 &	\spadesuit_3 &	\spadesuit_4 &	\spadesuit_5 & \spadesuit_6 \\
\Box_0 & \Box_1 &	\Box_2 &	\Box_3 &	\Box_4 &	\Box_5 & \Box_6 \\
\heartsuit_0 & \heartsuit_1 &	\heartsuit_2 &	\heartsuit_3 &	\heartsuit_4 &	\heartsuit_5 & \heartsuit_6 \\
\triangle_0 & \triangle_1 &	\triangle_2 &	\triangle_3 &	\triangle_4 &	\triangle_5 & \triangle_6 \\
\maltese_0 & \maltese_1 &	\maltese_2 &	\maltese_3 &	\maltese_4 &	\maltese_5 & \maltese_6 \\
 \end{bmatrix}.
           \label{eq:matr_orig}
 \end{equation}

 Matriz entrelaçada
 \begin{equation}\mathbf{V^*}=
 \begin{bmatrix}

    \clubsuit_0  &     \diamondsuit_1   &  \spadesuit_2  &   \Box_3  &   \heartsuit_4  &   \triangle_5  &   \maltese_6 \\
      \maltese_0&    \clubsuit_1  &  \diamondsuit_2  &   \spadesuit_3  &   \Box_4  &   \heartsuit_5  &   \triangle_6 \\
     \triangle_0 &    \maltese_1   &  \clubsuit_2  &   \diamondsuit_3  &   \spadesuit_4  &   \Box_5  &   \heartsuit_6 \\
     \heartsuit_0 &    \triangle_1   &  \maltese_2  &   \clubsuit_3  &   \diamondsuit_4  &   \spadesuit_5  &   \Box_6 \\
     \Box_0 &    \heartsuit_1   &  \triangle_2  &   \maltese_3  &   \clubsuit_4  &   \diamondsuit_5  &   \spadesuit_6 \\
     \spadesuit_0 &    \Box_1   &  \heartsuit_2  &   \triangle_3  &   \maltese_4  &   \clubsuit_5  &   \diamondsuit_6 \\
     \diamondsuit_0 &    \spadesuit_1   &  \Box_2  &   \heartsuit_3  &   \triangle_4  &   \maltese_5  &   \clubsuit_6 \\
 \end{bmatrix}
 \label{eq:matr_entrel}
 \end{equation}
\end{example}

{\color{white}.}\\

O elemento $(1,1)$ da Matriz apresentada em ~\ref{eq:matr_orig} representado por  $\diamondsuit_1$, tem sua posição alterada de acordo com a Equação ~\ref{eq:transformacaoentrela} para $(1,1-1)\texttt{mod} \ 7 =  (1,0)\texttt{mod} \ 7 = (j^{\prime},i^{\prime})$ na nova matriz entrelaçada.

O mesmo ocorre para o elemento $(6,4)$ da Matriz ~\ref{eq:matr_orig} representado por  $\heartsuit_6$, que tem sua posição alterada de acordo com a Equação ~\ref{eq:transformacaoentrela} para $(6,6-4)\texttt{mod} \ 7 =  (6,2)\texttt{mod} \ 7 = (j^{\prime},i^{\prime})$ na nova matriz entrelaçada. A modificação das posições dos elementos é validada na matriz apresentada em ~\ref{eq:matr_entrel}. Percebe-se que a coordenada corresponde à coluna não é alterada para nenhum elemento, como sugere a transformação da Equação ~\ref{eq:transformacaoentrela}.


\section{Geração das Manchas de Erro}\label{sec:geramancha}

Nesta dissertação, foram consideradas manchas de erros que afetam a matriz informação codificada e entrelaçada, $\mathbf{V^*_{n \times n}}$, e que possuem a moldura na forma de quadrado, retângulo ou cruz. Cada mancha de erro é gerada a partir de uma distribuição aleatória de $1s$ e $0s$. A partir deste momento o termo mancha se refere à mancha de erro.

A mancha com moldura quadrada possui dimensão, $a$, para $2\leq a \leq n$, e pode possuir peso, $p$, dado por $0\leq p \leq a^2$. O Exemplo ~\ref{ex:mancha quadrada} ilustra uma mancha quadrada com $a=8$ e $p=32$.

\begin{example}
\label{ex:mancha quadrada}
Mancha quadrada com $a=8$ e $p=32$
\begin{equation}
 \begin{bmatrix}

     1    & 0 &    0   &  0  &   0  &   0  &   0  &   1 \\
     1    & 0 &    0   &  1  &   1  &   1  &   1  &   0 \\
     1    & 1 &    0   &  1  &   1  &   1  &   0  &   1 \\
     0    & 1 &    1   &  1  &   1  &   1  &   0  &   1 \\
     1    & 1 &    0   &  0  &   0  &   0  &   0  &   0 \\
     1    & 0 &    1   &  0  &   0  &   0  &   0  &   1 \\
     0    & 1 &    0   &  0  &   0  &   0  &   1  &   0 \\
     1    & 0 &    1   &  1  &   1  &   1  &   1  &   0 \\
 \end{bmatrix}.
\end{equation}
\end{example}

A mancha com moldura retangular possui dimensões, $a$ e $b$, para $2\leq a \leq n$ e $2\leq b \leq n$, excetuando os casos em que $a=b$. Em que $a$  representa o número de linhas e $b$ o número de colunas da mancha. De maneira análoga o peso, $p$, é dado por $0\leq p \leq ab$. O Exemplo ~\ref{ex:mancharetangular} ilustra uma mancha retangular com $a=7$, $b=10$ e $p=28$.

\begin{example}
\label{ex:mancharetangular}
Mancha retangular com $a=7$, $b=10$ e $p=28$.
\begin{equation}
\begin{bmatrix}
     0   &  0  &   0  &   0  &   1  &   1  &   1  &   1  &   0  &   0   \\
     0   &  0  &   0  &   0  &   0  &   0  &   0  &   0  &   0  &   0   \\
     0   &  1  &   1  &   0  &   1  &   0  &   1  &   0  &   0  &   0   \\
     0   &  0  &   1  &   1  &   0  &   0  &   1  &   0  &   1  &   1   \\
     0   &  0  &   1  &   1  &   0  &   0  &   0  &   0  &   0  &   0   \\
     0   &  1  &   0  &   1  &   1  &   1  &   1  &   1  &   0  &   1   \\
     1   &  0  &   0  &   0  &   1  &   1  &   1  &   0  &   1  &   1   \\

 \end{bmatrix}.
 \end{equation}
\end{example}
\newpage
A mancha com moldura em cruz possui dimensões, $a$ e $b$, para $3\leq a \leq n$ e $3\leq b \leq n$. Em que $a$  representa o número de linhas e $b$ o número de colunas da mancha. Esse formato de cruz se diferencia dos demais modelos, pois para este caso os \emph{bits} das extremidades da mancha nessa moldura são zerados. Para este caso o peso, $p$ é dado por $0\leq p \leq (ab-4)$. O Exemplo ~\ref{ex:manchacruz} ilustra uma mancha cruz com $a=6$, $b=3$ e $p=8$.

\begin{example}
\label{ex:manchacruz}
Mancha em cruz com $a=6$, $b=3$ e $p=6$. Em negrito os elementos nulos das extremidades  para formar um padrão em cruz.
\begin{equation}
 \begin{bmatrix}
 \mathbf{0}  &   1  &   \mathbf{0} \\
 1  &   0  &   0 \\
 1  &   1  &   1 \\
 0  &   0  &   0 \\
 0  &   1  &   0 \\
 \mathbf{0}  &   0  &   \mathbf{0} \\
 \end{bmatrix}.
 \end{equation}
\end{example}

A fim de verificar a distribuição de geração das manchas, foram construídos histogramas para cada tipo de mancha. Os histogramas apresentados nas Figuras ~\ref{fig:manchaquadrada3} e ~\ref{fig:manchaquadrada5} ilustram a quantidade de manchas com moldura quadrada geradas em função do peso da mancha, $p$.

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{30.eps}
\caption{Histograma com a distribuição para manchas quadradas com dimensão $a=3$.}
\label{fig:manchaquadrada3}
\end{figure}

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{40.eps}
\caption{Histograma com a distribuição para manchas quadradas com dimensão $a=4$.}
\label{fig:manchaquadrada5}
\end{figure}

\newpage
Os histogramas apresentados nas Figuras ~\ref{fig:mancharetangular58} e ~\ref{fig:mancharetangular513} ilustram a quantidade de manchas com moldura retangular geradas em função do peso da mancha, $p$.

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{3050.eps}
\caption{Histograma com a distribuição para manchas retangulares com dimensões $a=3$ e $b=5$.}
\label{fig:mancharetangular58}
\end{figure}

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{5030.eps}
\caption{Histograma com a distribuição para manchas retangulares com dimensões $a=5$ e $b=3$.}
\label{fig:mancharetangular513}
\end{figure}

\newpage Os histogramas apresentados nas Figuras ~\ref{fig:manchacruz46} e ~\ref{fig:manchacruz313} ilustram a quantidade de manchas com moldura em cruz geradas em função do peso da mancha, $p$.

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{4060.eps}
\caption{Histograma com a distribuição para manchas em cruz com dimensões $a=4$ e $b=6$.}
\label{fig:manchacruz46}
\end{figure}

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{4040.eps}
\caption{Histograma com a distribuição para manchas cruz com dimensões $a=4$ e $b=4$.}
\label{fig:manchacruz313}
\end{figure}

\newpage Para as Figuras ~\ref{fig:manchaquadrada3} a \ref{fig:manchacruz313}, foram geradas 35.000 manchas para a otenção de cada histograma. Observa-se em todos as imagens um comportamento aproximado da distribuição de probabilidade binomial na geração das manchas em função de $p$. É sabido que o número de manchas para determinado $p$ e $P_{max}$ é dado por $C^{P_{max}}_p$, em que $P_{max}$ é o peso máximo de determinada mancha, e $C^n_m$ é obtido pela Fórmula apresentada em ~\ref{eq:combinacao}.


\begin{eqnarray} \label{eq:combinacao}
C^n_m & = &  \frac {n!}{m!(n-m)!}.
\end{eqnarray}

A adição da mancha na matriz binária é módulo 2. No trabalho desenvolvido, é escolhido um elemento como referência para a região a ser afetada pela mancha. Esse elemento inicial da matriz $\mathbf{V^*_{n \times n}}$ é escolhido aleatoriamente e representado por $\mathbf{V^*_{i j}}$, em que $i$ representa a linha e $j$ a coluna do elemento contido na matriz. No Exemplo ~\ref{ex:somamancha1}, ilustra-se o ataque da mancha na matriz $\mathbf{V^*_{n \times n}}$.

\begin{example}
\label{ex:somamancha1}
Seja a matriz codificada e entrelaçada $\mathbf{V^*_{7 \times 7}}$ dada por
\begin{equation}\mathbf{V^*_{7 \times 7}} =
 \begin{bmatrix}
 0 & 1 & 0 & 0 & 0 & 0 & 1 \\
 1 & 0 & 0 & 1 & 0 & 1 & 1 \\
 1 & 1 & 1 & 1 & 0 & 1 & 0 \\
 0 & 0 & 0 & 0 & 1 & 0 & 1 \\
 0 & 1 & 0 & 1 & 1 & 0 & 1 \\
 0 & 0 & 0 & 0 & 1 & 1 & 1 \\
 0 & 0 & 0 & 1 & 0 & 0 & 0 \\
 \end{bmatrix}.
\label{eq:somamancha2}
\end{equation}

Ela é atacada pela mancha quadrada $\mathbf{M_{\mathbf{5 \times 5}}}$ apresentada em ~\ref{eq:manchasoma1}. Esta matriz gerada por uma distribuição aleatória de $1s$ e $0s$ representa a adição de cinco surtos de comprimento cinco à matriz $\mathbf{V^*_{7 \times 7}}$.

\begin{equation}\label{eq:manchasoma1}\mathbf{M_{5 \times 5}} =
 \begin{bmatrix}
 1 & 1 & 1 & 1 & 1 \\
 1 & 1 & 1 & 1 & 1 \\
 1 & 1 & 1 & 1 & 1 \\
 1 & 1 & 1 & 1 & 1 \\
 1 & 1 & 1 & 1 & 1 \\
 \end{bmatrix}.
\end{equation}

 O ponto de ataque escolhido como início da região a ser afetada foi o elemento $\mathbf{V^*_{32}}$. Então, a submatriz composta pelos elementos em negrito na Matriz ~\ref{eq:manchasoma11} terá seus valores alterados pelos bits de $\mathbf{M_{5 \times 5}}$.

  \begin{equation}\label{eq:manchasoma11}\mathbf{V^*_{7 \times 7}} =
 \begin{bmatrix}
 0 & 1 & 0 & 0 & 0 & 0 & 1 \\
 1 & 0 & 0 & 1 & 0 & 1 & 1 \\
 1 & \mathbf{1} & \mathbf{1} & \mathbf{1} & \mathbf{0} & \mathbf{1} & 0 \\
 0 & \mathbf{0} & \mathbf{0} & \mathbf{0} & \mathbf{1} & \mathbf{0} & 1 \\
 0 & \mathbf{1} & \mathbf{0} & \mathbf{1} & \mathbf{1} & \mathbf{0} & 1 \\
 0 & \mathbf{0} & \mathbf{0} & \mathbf{0} & \mathbf{1} & \mathbf{1} & 1 \\
 0 & \mathbf{0} & \mathbf{0} & \mathbf{1} & \mathbf{0} & \mathbf{0} & 0 \\
 \end{bmatrix}.
\end{equation}
\end{example}

No Exemplo ~\ref{ex:somamancha1} o padrão de erro ficou contido na matriz de informação preservando sua moldura.  No entanto, existem casos em que isto não ocorre. O Exemplo ~\ref{ex:somamancha2} ilustra esta ocorrência.

 \begin{example}
\label{ex:somamancha2}
 Sejam as mesmas matrizes entrelaçada e mancha a ser adicionada apresentadas em ~\ref{eq:somamancha2} e ~\ref{eq:manchasoma1} respectivamente. Sendo que o  ponto de ataque escolhido como início da região a ser afetada para este caso foi o elemento $\mathbf{V^*_{65}}$. Como utiliza-se códigos cíclicos, então pode-se imaginar o arranjo apresentado na Figura ~\ref{fig:somamanchanova} (a) em que temos cópias da matriz $\mathbf{V^*_{7 \times 7}}$. Neste arranjo tem-se, em destaque na moldura vermelha, a região afetada pela mancha de acordo com o elemento inicial escolhido. A região pode ser divida conforme a Figura ~\ref{fig:somamanchanova} (b), dessa forma é possivel determinar os bits a serem afetados pela mancha na matriz $\mathbf{V^*_{7\times7}}$ através das cores de cada subregião.

 \begin{figure}[!h]
\center
\subfigure[Região afetada pela mancha.]{\includegraphics[width=0.45\linewidth]{soma_nao_cnt.eps}}
\qquad
\subfigure[Divisão da região afetada.]{\includegraphics[width=0.45\linewidth]{soma_nao_cnt1.eps}}
\caption{Adição da mancha de erro para o elemento inicial $\mathbf{V^*_{65}}$.}
\label{fig:somamanchanova}
\end{figure}


 Dessa a forma submatriz composta pelos elementos em negrito apresentada em ~\ref{eq:manchasoma12} terão seus valores alterados pelos bits de $\mathbf{M_{5 \times 5}}$

 \begin{equation}\label{eq:manchasoma12}\mathbf{V^*_{7 \times 7}} =
 \begin{bmatrix}
 \mathbf{0} & \mathbf{1} & 0 & 0 & \mathbf{0} & \mathbf{0} & \mathbf{1} \\
 \mathbf{1} & \mathbf{0} & 0 & 1 & \mathbf{0} & \mathbf{1} & \mathbf{1} \\
 \mathbf{1} & \mathbf{1} & 1 & 1 & \mathbf{0} & \mathbf{1} & \mathbf{0} \\
 0 & 0 & 0 & 0 & 1 & 0 & 1 \\
 0 & 1 & 0 & 1 & 1 & 0 & 1 \\
 \mathbf{0} & \mathbf{0} & 0 & 0 & \mathbf{1} & \mathbf{1} & \mathbf{1} \\
 \mathbf{0} & \mathbf{0} & 0 & 1 & \mathbf{0} & \mathbf{0} & \mathbf{0} \\
 \end{bmatrix}.
\end{equation}
\end{example}

O Exemplo ~\ref{ex:somamancha2} ilustra um caso em que o erro não preserva sua moldura ao ser adicionado à matriz, no entanto, a mesma quantidade de surtos e adicionada, bem como a mesma quantidade de \emph{bits} é afetada em ambos os exemplos. A adição da matriz $\mathbf{M_{5 \times 5}}$ representa a adição de cinco surtos de comprimento cinco a matriz $\mathbf{V^*_{7 \times 7}}$ apresentada em ~\ref{eq:somamancha2}.

\section{Desentrelaçador}\label{sec:desentrelacador}

O desentrelaçador realiza a operação inversa realizada pelo entrelaçador. Para tal é necessário encontrar a matriz $\mathbf{T^{-1}}$, matriz inversa da matriz de transformação $\mathbf{T}$ utilizada na Equação \ref{eq:transformacaoentrela}. Seja uma matriz binária quadrada $\mathbf{C_{c \times c}}$, a sua matriz inversa $\mathbf{C^{-1}_{c \times c}}$ é aquela matriz tal que $\mathbf{C}\mathbf{C^{-1}}= \mathbf{I}$, em que $\mathbf{I}$ é a matriz identidade de ordem $c$. Então, ao resolver a Equação ~\ref{eq:desentrela} encontra-se $\mathbf{T^{-1}}=\mathbf{T}$ \cite{art:Rocha}.

\begin{eqnarray}
\mathbf{T}\mathbf{T^{-1}}   =  \mathbf{I}_2.
          \label{eq:desentrela}
\end{eqnarray}

Com base no resultado da Equação ~\ref{eq:desentrela}, é necessário aplicar a mesma transformação realizada pela matriz $\mathbf{T}$, e o trabalho do desentrelaçador é desfeito. Dessa maneira, a matriz $\mathbf{R^{\ast}_{n \times n}}$ é convertida na matriz $\mathbf{R_{n \times n}}$ para ser decodificada e depois recuperada a informação.

A seguir são apresentadas em \ref{eq:desentrsoma1} e \ref{eq:desentrsoma2} as matrizes desentrelaçadas $\mathbf{R_{7 \times 7}}$ para os Exemplos ~\ref{ex:somamancha1} e ~\ref{ex:somamancha2} respectivamente.

 \begin{equation}\label{eq:desentrsoma1}\mathbf{R^*_{7 \times 7}} =
 \begin{bmatrix}
 0 & 0 &  \mathbf{0} & \mathbf{1} & \mathbf{0} & \mathbf{0} & 0 \\
 0 & 1 & 0 & \mathbf{0} & \mathbf{0} & \mathbf{1} & 1 \\
 0 & \mathbf{1} & 0 & 1 & \mathbf{1} & \mathbf{1} & 1 \\
 0 & \mathbf{1} & \mathbf{1} & 0 & 0 & \mathbf{0} & 1 \\
 0 & \mathbf{0} & \mathbf{1} & \mathbf{0} & 0 & 1 & 0 \\
 1 & \mathbf{1} & \mathbf{1} & \mathbf{1} & \mathbf{1} & 0 & 1 \\
 1 & \mathbf{0} & \mathbf{1} & \mathbf{0} & \mathbf{0} & \mathbf{1} & 1 \\
 \end{bmatrix}
\end{equation}

 \begin{equation}\label{eq:desentrsoma2}\mathbf{R^*_{7 \times 7}} =
 \begin{bmatrix}
 \mathbf{1} & \mathbf{1} & 1 & 0 & 1 & \mathbf{1} & \mathbf{0} \\
 \mathbf{1} & \mathbf{0} & 0 & 1 & 1 & 0 & \mathbf{1} \\
 \mathbf{1} & \mathbf{1} & 0 & 1 & \mathbf{1} & 0 & 1 \\
 0 & \mathbf{1} & 0 & 0 & \mathbf{1} & \mathbf{0} & 1 \\
 0 & 1 & 0 & 1 & \mathbf{1} & \mathbf{0} & \mathbf{1}\\
 \mathbf{0} & 0 & 0 & 0 & \mathbf{1} & \mathbf{1} & \mathbf{0} \\
 \mathbf{0} & \mathbf{0} & 0 & 1 & \mathbf{0} & \mathbf{1} & \mathbf{0} \\
 \end{bmatrix}.
\end{equation}

Os \emph{bits} em negrito foram afetados pelos bits da matriz $\mathbf{M_{5\times5}}$ apresentada em ~\ref{eq:manchasoma1}. É possível perceber que o comprimento dos surtos que atacaram as matrizes $\mathbf{R^*_{7 \times 7}}$ para as Matrizes ~\ref{eq:desentrsoma1} e ~\ref{eq:desentrsoma2} permaneceram ou tiveram seu comprimento reduzido em relação aos surtos das matrizes $\mathbf{V^*_{7 \times 7}}$ para as Matrizes ~\ref{eq:manchasoma11} e ~\ref{eq:manchasoma12}, demonstrando a vantagem no uso do entrelaçador. A seguir é apresentado o desempenho dos decodificadores para as duas técnicas de decodificação estudadas.

\section{Desempenho do decodificador para as técnicas de armadilha simples e a de armadilha adaptativa}\label{sec:desempenho}

Para avaliar o desempenho dos decodificadores utilizados, o seguinte procedimento foi realizado. Considere que o polinômio $u(x)=0$ é codificado sistematicamente pelo codificador do código cíclico $C(15,5)$ gerado por $g(x)=1+x^2+x^5+x^6+x^8+x^9+x^{10}$ e com capacidade $b=5$ de correção de erros em surto \cite{Livro:Shulin}. Este código é ótimo, pois satisfaz com igualdade o limitante de Reiger apresentado na Inequação ~\ref{eq:limreiger}. A codificação resulta no polinômio código $v(x)=0$. Este polinômio tem as posições de menor grau afetadas por um polinômio erro, $e(x)$, de grau $r$ para $1 \leq r \leq 6$. Para a Tabela ~\ref{tabelab6} há conhecimento do surto a ser inserido, enquanto nas demais é estabelecido apenas o seu comprimento. O polinômio $r(x)$ resultante é usado como entrada dos decodificadores por armadilha fixa e por armadilha adaptativa, que dão como resultado dois polinômios estimados $\hat{u}_1(x)$ e $\hat{u}_2(x)$ respectivamente. Comparando $u(x)$ com $\hat{u}_1(x)$ e $\hat{u}_2(x)$ verifica-se o sucesso ou falha na correção do surto inserido para cada decodificador. Em seguida, o polinômio erro $e(x)$ é deslocado ciclicamente uma vez para a direita e todo o procedimento se repete até que se tenha efetuado $n=15$ deslocamentos em $e(x)$, pois dessa forma ele terá percorrido todo o polinômio $v(x)$. Seguindo este raciocínio, como era de se esperar, todos os surtos de comprimento $b=5$ ou menor foram corrigidos por ambas técnicas.

A Tabela ~\ref{tabelab6} apresenta os surtos gerados e falhas percentuais para o caso de armadilha adaptativa e comprimento de surto $b=6$. Para o decodificador de armadilha fixa nenhum dos surtos foi decodificado, pois não podem ser aprisionados pela armadilha de tamanho cinco.

\begin{table}[!h]
\caption {Desempenho do decodificador armadilha para surtos de comprimento $b=6$, Em destaque os surtos não corrigidos.}
\begin{center}
\begin{tabular}{|c|c|c|} \hline
\multicolumn{2}{|c|}{ \textbf{Surto} }  & \textbf{Erros Armadilha}\\
\multicolumn{2}{|c|}{ \textbf{Gerado} } & \textbf{Variável (\%)}\\ \hline
b = 6& 100001   &0,00\% \\ \hline
     & 100011    &0,00\% \\ \hline
     & 100101    &0,00\% \\ \hline
	 & 100111    &0,00\% \\ \hline
	 & 101001    &\textbf{100,00\%} \\ \hline
     & 101011    &0,00\% \\ \hline
	 & 101101    &0,00\% \\ \hline
	 &101111  &0,00\% \\ \hline
	 & 110001  &0,00\% \\ \hline
	 & 110011  &0,00\% \\ \hline
	 & 110101  &0,00\% \\ \hline
	 & 110111  &\textbf{100,00\%} \\ \hline
	 & 111001  &0,00\% \\ \hline
	 & 111011  &0,00\% \\ \hline
	 & 111101   &\textbf{100,00\%} \\ \hline
	 & 111111  &0,00\% \\ \hline

\end{tabular}
\end{center}
\label{tabelab6}
\end{table}

 Percebe-se a diferença na capacidade de correção dos surtos quando se usa o decodificador por armadilha adaptativa em relação ao de armadilha fixa. A correção para a maioria dos surtos utilizando o decodificador de armadilha adaptativa é obtida para o comprimento $b=6$. Analisando a Tabela ~\ref{tabelab6} nota-se que para os dezesseis possíveis surtos de comprimento $b=6$ gerados, apenas três surtos não foram decodificados.

 A não correção destes surtos é explicada pela teoria apresentada na Seção ~\ref{sec:conceitosbasicossurto}. No caso do surto da quinta linha da Tabela ~\ref{tabelab6}, $101001$, de comprimento $6$ é possível adicioná-lo com o surto $E=00000010111$ de comprimento $5$ e resultar no surto $F=10100110111$. O surto $F$ de comprimento $11$ é uma palavra código, então, existe um  surto de comprimento menor que $2b=12$ que é uma palavra código, logo o código não é capaz de corrigir todos os erros em surto de comprimento $6$.  Para o surto da décima segunda linha da Tabela ~\ref{tabelab6}, $110111$, a explicação é mesma sendo que considera-se os vetores $D=1010000000$, $E=00000010111$ e $F=10100110111$, em que $F=D+E$. Idem para o surto da décima quarta linha da Tabela ~\ref{tabelab6}, $111101$, agora com $D=10100000111$, $E=00000110000$ e $F=10100110111$.

As Tabelas ~\ref{tab:tabelaC15-5-1}, ~\ref{tab:tabelaC15-5-2}, ~\ref{tab:tabelaC21-7-1} e  ~\ref{tab:tabelaC21-7-2} dão continuidade à análise do desempenho dos decodificadores. O procedimento realizado na obtenção dos dados é similar ao apresentado no início dessa seção. Neste caso define-se apenas o tamanho do surto, não há a construção de cada surto independentemente. No entanto, cada surto gerado ainda percorre todo o polinômio código.

Apresentam-se os valores médios e o desvio padrão do desempenho do decodificador armadilha variável para os códigos cíclicos binários e lineares $C(15,5)$ (Tabelas ~\ref{tab:tabelaC15-5-1} e ~\ref{tab:tabelaC15-5-2} ) e $C(21,7)$ (Tabelas ~\ref{tab:tabelaC21-7-1} e ~\ref{tab:tabelaC21-7-2}). Para o decodificador de armadilha fixa nenhum dos surtos com comprimento maior que cinco para o código $C(15,5)$ e comprimento sete para o código $C(21,7)$ foram decodificados, pois não podem ser aprisionados pela armadilha do respectivo decodificador.


\begin{table}[!h]
\caption {Resultados da Média (Med) e Desvio Padrão (DevPad) de dez amostras obtidas pelo decodificador de armadilha variável (AV), para o código C(15,5), gerado por,  $g(x) = 1+ x+x^2 +x^4 +x^5 +x^8 +x^{10} $, com $b = 5$, para diferentes comprimentos de surtos (1005 surtos gerados).}
\begin{center}
\begin{tabular}{|c|c|c|} \hline


\textbf{Tamanho do} & \multicolumn{2}{|c|}{ \textbf{Surtos não corrigidos AV}} \\

\textbf{Surto}&\multicolumn{2}{|c|}{ \textbf{1005 surtos gerados}} \\ \cline{2-3}

&Med&DevPad \\  \hline

b = 2 & 0,00\% & 0,00 E+00    \\ \hline
b = 3& 0,00\% & 0,00 E+00   \\ \hline
b = 4& 0,00\% & 0,00 E+00    \\ \hline
b = 5& 0,00\% & 0,00 E+00    \\ \hline
b = 6& 16,27\% & 3,48 E-02   \\ \hline
b = 7& 38,51\% & 6,38 E-02   \\ \hline
b = 8& 74,43\% & 4,67 E-02    \\ \hline
b = 9& 96,83\% & 1,64 E-02   \\ \hline
b = 10& 98,81\% & 1,37 E-02    \\ \hline

\end{tabular}
\label{tab:tabelaC15-5-1}
\end{center}
\end{table}
\newpage
\begin{table}[!h]
\caption {Resultados da Média (Med) e Desvio Padrão (DevPad) de dez amostras obtidas pelo decodificador de armadilha variável (AV), para o código C(15,5), gerado por,  $g(x) = 1+ x+x^2 +x^4 +x^5 +x^8 +x^{10} $, com $b = 5$, para diferentes comprimentos de surtos (10050 surtos gerados).}
\begin{center}
\begin{tabular}{|c|c|c|} \hline


\textbf{Tamanho do} & \multicolumn{2}{|c|}{ \textbf{Surtos não corrigidos AV}}  \\

\textbf{Surto}&\multicolumn{2}{|c|}{ \textbf{10050 surtos gerados}} \\ \cline{2-3}

&Med&DevPad \\  \hline

b = 2 & 0,00\% & 0,00 E+00   \\ \hline
b = 3& 0,00\% & 0,00 E+00    \\ \hline
b = 4& 0,00\% & 0,00 E+00    \\ \hline
b = 5& 0,00\% & 0,00 E+00    \\ \hline
b = 6& 18,84\% & 1,47 E-02   \\ \hline
b = 7& 37,41\% & 9,94 E-03    \\ \hline
b = 8& 73,45\% & 1,73 E-02    \\ \hline
b = 9& 96,54\% & 5,81 E-03   \\ \hline
b = 10& 98,49\% & 5,42 E-03    \\ \hline

\end{tabular}
\label{tab:tabelaC15-5-2}
\end{center}
\end{table}


\begin{table}[!h]
\caption {Resultados da Média (Med) e Desvio Padrão (DevPad) de dez amostras obtidas pelo decodificador de armadilha variável (AV), para o código C(21,7), gerado por,  $g(x) = 1+ x^3 + x^4 +x^5 +x^7 + x^8 + x^9 + x^{13} + x^{14} $, com $b = 7$, para diferentes comprimentos de surtos (1008 surtos gerados).}
\begin{center}
\begin{tabular}{|c|c|c|} \hline


\textbf{Tamanho do} & \multicolumn{2}{|c|}{ \textbf{Surtos não corrigidos AV}}  \\

\textbf{Surto}&\multicolumn{2}{|c|}{ \textbf{1008 surtos gerados}}\\ \cline{2-3}

&Med&DevPad \\  \hline

b = 2 & 0,00\% & 0,00 E+00   \\ \hline
b = 3& 0,00\% & 0,00 E+00    \\ \hline
b = 4& 0,00\% & 0,00 E+00    \\ \hline
b = 5& 0,00\% & 0,00 E+00   \\ \hline
b = 6& 0,00\% & 0,00 E+00  \\ \hline
b = 7& 0,00\% & 0,00 E+00    \\ \hline
b = 8& 5,63\% & 3,03 E-02    \\ \hline
b = 9& 12,78\% & 4,08 E-02   \\ \hline
b = 10& 30,71\% & 7,18 E-02    \\ \hline
b = 11& 53,73\% & 7,03 E-02    \\ \hline
b = 12& 86,84\% & 4,31 E-02    \\ \hline
b = 13& 99,58\% & 6,94 E-03   \\ \hline
b = 14& 99,79\% & 6,94 E-03    \\ \hline
\end{tabular}
\label{tab:tabelaC21-7-1}
\end{center}
\end{table}



 \begin{table}[!h]
\caption {Resultados da Média (Med) e Desvio Padrão (DevPad) de dez amostras obtidas pelo decodificador de armadilha variável (AV), para o código C(21,7), gerado por,  $g(x) = 1+ x^3 + x^4 +x^5 +x^7 + x^8 + x^9 + x^{13} + x^{14} $, com $b = 7$, para diferentes comprimentos de surtos (10080 surtos gerados).}
\begin{center}
\begin{tabular}{|c|c|c|} \hline


\textbf{Tamanho do} & \multicolumn{2}{|c|}{ \textbf{Surtos não corrigidos AV}}  \\

\textbf{Surto}&\multicolumn{2}{|c|}{ \textbf{10080 surtos gerados}} \\ \cline{2-3}

&Med&DevPad \\  \hline


b = 2 & 0,00\% & 0,00 E+00  \\ \hline
b = 3& 0,00\% & 0,00 E+00    \\ \hline
b = 4& 0,00\% & 0,00 E+00   \\ \hline
b = 5& 0,00\% & 0,00 E+00    \\ \hline
b = 6& 0,00\% & 0,00 E+00  \\ \hline
b = 7& 0,00\% & 0,00 E+00   \\ \hline
b = 8& 6,33\% & 1,45 E-02    \\ \hline
b = 9& 12,82\% & 2,19 E-02   \\ \hline
b = 10& 27,92\% & 1,51 E-02    \\ \hline
b = 11& 55,19\% & 2,89 E-02    \\ \hline
b = 12& 87,65\% & 9,34 E-03    \\ \hline
b = 13& 99,37\% & 4,57 E-03   \\ \hline
b = 14& 99,88\% & 1,47 E-03    \\ \hline
\end{tabular}
\label{tab:tabelaC21-7-2}
\end{center}
\end{table}

{\color{white}.}\\

Analisando as Tabelas ~\ref{tab:tabelaC15-5-1}, ~\ref{tab:tabelaC15-5-2}, ~\ref{tab:tabelaC21-7-1} e ~\ref{tab:tabelaC21-7-2} percebe-se que à medida que o comprimento do surto aumenta, a percentagem de erro também acompanha este aumento. Dessa forma, quanto maior o comprimento do surto mais surtos podem ser decompostos em dois outros menores que somados resultam em uma palavra código e dessa forma torna a decodificação impossível para aquele determinado comprimento. Na próxima seção são abordados exemplos com imagens.

\section{Exemplos}\label{sec:exemplo imagem}

Nos exemplos que se seguem considera-se uma imagem como fonte de informação. A imagem considerada foi a do arquivo \emph{lenna128.bmp}, extraído de \cite{imagem:xxx}. Para todos os exemplos, foi usado o código cíclico binário linear $C(21,7)$ gerado por  $g(x) = 1+ x^3 + x^4 +x^5 +x^7 + x^8 + x^9 + x^{13} + x^{14} $ e com capacidade de correção de surtos de comprimento até $b = 7$.
Na seção ~\ref{sec:exemp_oldimg} é seguido o esquema apresentado na Figura ~\ref{fig:esquemaumbloco}. Nesse esquema, a matriz original é dividida em blocos. Cada bloco é codificado, entrelaçado e afetado por uma única mancha.

Na seção ~\ref{sec:exemp_newimg} também ocorre a divisão de blocos da matriz binária original para codificação e entrelaçamento. Em seguida, essa matriz é reconstruída e a adição de determinado número de manchas ocorre em toda a matriz, podendo ou não haver superposição de manchas.

\subsection{Adição de mancha em cada Bloco}\label{sec:exemp_oldimg}

 Seguindo o esquema apresentado na Figura ~\ref{fig:esquemaumbloco}, \ a Figura ~\ref{fig:imagemoriginalecodifi1} (a) representa a imagem original. A localização da imagem no esquema da Figura ~\ref{fig:esquemaumbloco} é representada pela letra \textcolor[rgb]{1.00,0.00,0.00}{A}.

Essa imagem quando convertida em uma matriz de \emph{bits} resulta em uma matriz com dimensões $128\times 1024$. Após o ajuste para o código $C(21,7)$, tem-se uma dimensão de $147\times1029$, o que resulta num total de 1029 blocos à serem enviados em sequência pelo sistema de transmissão. Cada bloco, representado por $\mathbf{U_{21 \times 7}}$ é codificado sistematicamente resultando em $\mathbf{V_{21 \times 21}}$. A Figura ~\ref{fig:imagemoriginalecodifi1} (b) representa a imagem codificada. A localização da imagem no esquema da Figura ~\ref{fig:esquemaumbloco} é representada pela letra \textcolor[rgb]{1.00,0.00,0.00}{B}.

Em seguida, a matriz $\mathbf{V_{21 \times 21}}$ é entrelaçada pelo entrelaçador descrito na Seção ~\ref{sec:entrelacador}, gerando a matriz $\mathbf{V^*_{21 \times 21}}$. A Figura ~\ref{fig:imagemoriginalecodifi1} (c) representa a imagem entrelaçada. A localização da imagem no esquema da Figura ~\ref{fig:esquemaumbloco} é representada pela letra \textcolor[rgb]{1.00,0.00,0.00}{C}.

\begin{figure}[!h]
\center
\subfigure[Imagem Original]{\includegraphics[width=0.4\linewidth]{original_OK.eps}}
\qquad
\subfigure[Imagem Codificada]{\includegraphics[width=0.4\linewidth]{codificada_OK.eps}}
\qquad
\subfigure[Imagem Entrelaçada]{\includegraphics[width=0.4\linewidth]{entrelacada_OK.eps}}
\caption{Imagem original (a), imagem codificada (b) e imagem entrelaçada (c).}
\label{fig:imagemoriginalecodifi1}
\end{figure}

Logo após é adicionada uma mancha de erro ao bloco, conforme apresentado na Seção ~\ref{sec:geramancha}. Essa matriz resulta na matriz $\mathbf{R^{\ast}_{21 \times 21}}$ que é desentrelaçada, resultando na matriz $\mathbf{R_{21 \times 21}}$. Devido a co\-di\-fi\-ca\-ção sistemática, é possivel separar os bits de informação de cada bloco e ao fim compor uma imagem. A localização destas imagens no esquema da Figura ~\ref{fig:esquemaumbloco} é representada pela letra \textcolor[rgb]{1.00,0.00,0.00}{D}.

 A matriz $\mathbf{R^{\ast}_{21 \times 21}}$ é decodificada gerando a matriz estimada $\mathbf{\hat{U}_{21 \times 7}}$. Após a recepção e conversão para decimal de todos os blocos, é possível reconstruir a imagem. A localização dessa imagem no esquema da Figura ~\ref{fig:esquemaumbloco} é representada pela letra \textcolor[rgb]{1.00,0.00,0.00}{E}.

 A Figura ~\ref{fig:imagemoriginalecodifi1} ilustra a imagem original, a imagem codificada e a imagem entrelaçada que são usadas nos exemplos que seguem. Vale resaltar que as imagens foram construídas removendo o ajuste pela adição de zeros adicionada à matriz original.
\newpage

No Exemplo ~\ref{ex:imagem1} cada bloco codificado e entrelaçado foi afetado por uma mancha quadrada com $a=7$ e peso $p$. O valor de $p$ e o local em que a mancha ataca a imagem são escolhidos aleatorialmente. Uma vez que apenas o comprimento do vetor é fator de correção para o decodificador.

\begin{example}
\label{ex:imagem1}

As Figuras ~\ref{fig:imagemNdeseNdecod1} e  ~\ref{fig:imagemAdapNAdap1} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}, para o caso da adição de mancha quadrada com $a=7$ em cada bloco transmitido.

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_dec_OK.eps}
\caption{Exemplo de imagem afetada por mancha quadrada com dimensão $a=7$ em cada bloco.  Imagem reconstruída com os bits de informação da imagem não decodificada}.
\label{fig:imagemNdeseNdecod1}
\end{figure}


{\color{white}.}\\
{\color{white}.}\\
\newpage


\begin{figure}[!h]
\center
\subfigure[Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_OK.eps}}
\qquad
\subfigure[Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_OK.eps}}
\caption{Exemplo de imagem afetada por mancha quadrada com dimensão $a=7$ em cada bloco. Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b).}
\label{fig:imagemAdapNAdap1}
\end{figure}
\end{example}



A fim de validar a eficiência da decodificação por cada técnica contou-se o número de pixels diferentes entre a imagem original e as imagens decodificadas por cada decodificador. A imagem utilizada como exemplo possui dimensão $128 \times 128$, logo um total de $128^2 = 16384$ \emph{pixels}.

As imagens da Figura ~\ref{fig:imagemAdapNAdap1} obtida pelo decodificador de armadilha adaptativa (a) e pelo decodificador de armadilha fixa (b) apresentam 0 \emph{pixels} diferentes em relação à imagem original.  Enquanto a imagem da Figura ~\ref{fig:imagemNdeseNdecod1} (b) que não sofreu decodificação possui um total de 4171 \emph{pixels} diferentes em relação à imagem original, ou seja, 25,46 \% dos \emph{pixels} totais.


O procedimento do Exemplo ~\ref{ex:imagem1} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfinal1}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição da mancha com moldura quadrada e dimensão $a=7$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	0,00\%&	0,00\%&	25,46\%\\ \hline
2&	0,00\%& 0,00\%&	27,12\%\\ \hline
3&	0,00\%&	0,00\%&	27,52\%\\ \hline
4&	0,00\%&	0,00\%&	25,91\%\\ \hline
5&	0,00\%&	0,00\%&	26,54\%\\ \hline
6&	0,00\%&	0,00\%&	26,53\%\\ \hline
7&	0,00\%&	0,00\%&	27,67\%\\ \hline
8&	0,00\%&	0,00\%&	26,55\%\\ \hline
9&	0,00\%&	0,00\%&	26,31\%\\ \hline
10&	0,00\%&	0,00\%&	26,27\%\\ \hline \hline
\textbf{Média}&	0,00\%&	0,00\%&	26,59\%\\ \hline
\textbf{Desvio Padrão}&	0,00 E-00 &0,00 E-00&	6,83 E-03\\ \hline

\end{tabular}
\label{tabelaerrosfinal1}
\end{center}\end{table}

\newpage

Pela análise da Tabela ~\ref{tabelaerrosfinal1} percebe-se que todos os erros inseridos foram corrigidos para ambos os decodificadores, isto porque a mancha quadrada com dimensão $a=7$ gera surtos de comprimento sete ou menor. Como o código é ótimo então, todos esses surtos são corrigidos.


\newpage

No Exemplo ~\ref{ex:imagem2} cada bloco codificado e entrelaçado foi afetado por uma mancha retangular com dimensões $a=8$ e $b=9$ e peso $p$. O valor de $p$ e o local em que a mancha ataca a imagem são escolhidos aleatorialmente.

\begin{example}
\label{ex:imagem2}

As Figuras ~\ref{fig:imagemNdeseNdecod2} e  ~\ref{fig:imagemAdapNAdap2} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}, para o caso de mancha retangular com $a=8$ e $b=9$.

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_decod_2.eps}
\caption{Exemplo de imagem afetada por mancha retangular com $a=8$ e $b=9$ em cada bloco. Imagem reconstruída com os bits de informação da imagem não decodificada}.

\label{fig:imagemNdeseNdecod2}
\end{figure}

\begin{figure}[!h]
\center
\subfigure[Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_2.eps}}
\qquad
\subfigure[Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_2.eps}}
\caption{Exemplo de imagem afetada por mancha retangular com dimensões $a=8$ e $b=9$ em cada bloco. Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b).}
\label{fig:imagemAdapNAdap2}
\end{figure}

\end{example}

Ao realizar a contagem do \emph{pixels} diferentes, a imagem da Figura ~\ref{fig:imagemAdapNAdap2} obtida pelo decodificador de armadilha adaptativa (a), possui 49 \emph{pixels} diferentes, ou seja, 0,30 \% dos \emph{pixels} totais. Enquanto a imagem obtida pelo decodificador de armadilha fixa (b) apresenta um total de 756 pixels diferentes em relação à imagem original, ou seja, 4,61 \% dos pixels totais.  Já a imagem da Figura ~\ref{fig:imagemNdeseNdecod2} (b), na qual não sofreu decodificação possui um total de 5930 \emph{pixels} diferentes em relação à imagem original, ou seja, 36,19 \% dos \emph{pixels} totais.

O procedimento do Exemplo ~\ref{ex:imagem2} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfinal2}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a  adição da mancha com moldura retangular de dimensões $a=8$ e $b=9$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	0,30\%&	4,61\%&	36,19\%\\ \hline
2&	0,24\%&	4,59\%&	35,99\%\\ \hline
3&	0,18\%&	4,47\%&	37,92\%\\ \hline
4&	0,30\%&	4,38\%&	37,19\% \\ \hline
5&	0,31\%&	4,30\%&	36,27\%\\ \hline
6&	0,35\%&	4,41\%&	36,43\%\\ \hline
7&	0,26\%&	4,28\%&	36,60\%\\ \hline
8&	0,27\%&	4,65\%&	37,28\%\\ \hline
9&	0,19\%&	4,74\%&	35,89\%\\ \hline
10&	0,26\%&	4,61\%& 36,74\%\\ \hline \hline
\textbf{Média}&	0,27\%&	4,50\%&	36,65\%\\ \hline
\textbf{Desvio Padrão}&	5,29 E-04 &1,58 E-03&	6,44 E-03\\ \hline

\end{tabular}
\label{tabelaerrosfinal2}
\end{center}\end{table}


Pela análise da Tabela ~\ref{tabelaerrosfinal2} percebe-se a melhora na correção para o decodificador por armadilha adaptativa em relação ao de armadilha fixa.

No Exemplo ~\ref{ex:imagem3} cada bloco codificadao e entrelaçado foi afetado por uma mancha em cruz com dimensões $a=10$ e $b=10$ e peso $p$. O valor de $p$ e o local em que a mancha ataca a imagem são escolhidos aleatorialmente.

\begin{example}
\label{ex:imagem3}

As Figuras ~\ref{fig:imagemNdeseNdecod3} e  ~\ref{fig:imagemAdapNAdap3} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}, para o caso de mancha em cruz com $a=10$ e $b=10$.

\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_decod_2.eps}
\caption{Exemplo de imagem afetada por mancha em cruz com $a=10$ e $b=10$ em cada bloco. Imagem reconstruída com os bits de informação da imagem não decodificada}.
\label{fig:imagemNdeseNdecod3}
\end{figure}

\begin{figure}[!h]
\center
\subfigure[Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_2.eps}}
\qquad
\subfigure[Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_2.eps}}
\caption{Exemplo de imagem afetada por mancha em cruz com dimensões $a=10$ e $b=10$ em cada bloco. Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b)}
\label{fig:imagemAdapNAdap3}
\end{figure}

\end{example}
\newpage
 Realizando a contagem de \emph{pixels} diferentes verificou-se que a imagem da Figura ~\ref{fig:imagemAdapNAdap3}, obtida pelo decodificador de armadilha adaptativa (a), possui 132 \emph{pixels} diferentes, ou seja, 0,80 \% dos pixels totais. Enquanto a imagem obtida pelo decodificador de armadilha fixa (b) apresenta um total de 2467 pixels diferentes em relação à imagem original ou seja, 15,05 \% dos \emph{pixels} totais.  Já a imagem da Figura ~\ref{fig:imagemNdeseNdecod2} (b) que não sofreu decodificação possui um total de 7300 \emph{pixels} diferentes em relação à imagem original, ou seja, 44,55 \% dos pixels totais.

 \newpage

O procedimento do Exemplo ~\ref{ex:imagem3} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfinal3}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição da mancha com moldura em cruz e dimensões $a=10$ e $b=10$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	0,80\%&	15,05\%& 44,55\%\\ \hline
2&	1,22\%&	15,80\%& 46,26\%\\ \hline
3&	1,09\%&	15,26\%& 45,45\%\\ \hline
4&	1,01\%&	15,58\%& 42,49\% \\ \hline
5&	1,17\%&	15,27\%& 45,01\%\\ \hline
6&	1,18\%&	15,34\%& 45,00\%\\ \hline
7&	1,03\%&	15,44\%& 45,56\%\\ \hline
8&	1,11\%&	15,30\%& 45,19\%\\ \hline
9&	1,16\%&	15,32\%& 45,18\%\\ \hline
10&	0,95\%&	14,56\%& 43,37\%\\ \hline \hline
\textbf{Média}&	1,07\%&	15,29\%&	44,81\%\\ \hline
\textbf{Desvio Padrão}&	1,28 E-03 &3,27 E-03&	1,10 E-02\\ \hline

\end{tabular}
\label{tabelaerrosfinal3}
\end{center}\end{table}


Pela análise da Tabela ~\ref{tabelaerrosfinal3} percebe-se a melhora na correção para o decodificador por armadilha adaptativa em relação ao de armadilha fixa.

\newpage
No Exemplo ~\ref{ex:imagem4} não há controle sobre o tipo de mancha, valor de $p$ e local de ataque da mancha na imagem.

\begin{example}
\label{ex:imagem4}

As Figuras ~\ref{fig:imagemNdeseNdecod4} e  ~\ref{fig:imagemAdapNAdap4} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}.


\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_decod_4.eps}
\caption{Exemplo de imagem afetada por mancha de moldura aleatória em cada bloco. Imagem reconstruída com os bits de informação da imagem não decodificada}.
\label{fig:imagemNdeseNdecod4}
\end{figure}


\begin{figure}[!h]
\center
\subfigure[\label{fig:a}][Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_4.eps}}
\qquad
\subfigure[b][Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_4.eps}}
\caption{Exemplo de imagems afetada por mancha de moldura aleatória em cada bloco.Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b).}
\label{fig:imagemAdapNAdap4}
\end{figure}
\end{example}
Seguindo o raciocínio aplicado nos exemplos anteriores contou-se o número de \emph{pixels} diferentes entre a imagem original e as imagens decodificadas por cada decodificador. A imagem da Figura ~\ref{fig:imagemAdapNAdap4}(a) obtida pelo decodificador de armadilha adaptativa apresenta um total de 5161 \emph{pixels} diferentes em relação à imagem original, ou seja, 31,50\% de \emph{pixels }diferentes. Já a imagem da  Figura ~\ref{fig:imagemAdapNAdap3} (b) obtida pelo decodificador de armadilha fixa apresenta um total de 8203 \emph{pixels} diferentes em relação à imagem original, ou seja, 50,07 \% de \emph{pixels} diferentes. Enquanto a imagem da Figura ~\ref{fig:imagemNdeseNdecod3} (b)que não sofreu decodificação possui um total de 9167 \emph{pixels} diferentes em relação à imagem original, ou seja, 55,95 \% dos\emph{ pixels} totais. O procedimento do Exemplo ~\ref{ex:imagem4} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfina4}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição da mancha com moldura aleatória.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa }& \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	31,50\%&	50,07\%&	55,95\%\\ \hline
2&	30,32\%&	49,07\%&	55,24\%\\ \hline
3&	30,57\%&	49,04\%&	57,36\%\\ \hline
4&	31,30\%&	49,38\%&	56,26\%\\ \hline
5&	30,00\%&	48,83\%&	55,52\%\\ \hline
6&	33,87\%&	52,42\%&	58,53\%\\ \hline
7&	33,59\%&	51,53\%&	56,40\%\\ \hline
8&	31,05\%&	50,23\%&	55,94\%\\ \hline
9&	35,70\%&	55,08\%&	59,33\%\\ \hline
10&	32,48\%&	51,39\%&	58,13\%\\ \hline \hline
\textbf{Média}&	32,04\%&	50,70\%&	55,87\%\\ \hline
\textbf{Desvio Padrão}&	1,84 E-02 &1,96 E-02&	1,39 E-02\\ \hline

\end{tabular}
\label{tabelaerrosfina4}
\end{center}\end{table}

Pela análise da Tabela ~\ref{tabelaerrosfina4} percebe-se um menor percentual de pixels diferentes em relação à imagem original quando se utiliza o decodificador por armadilha adaptativa, comprovando assim sua maior eficiência.

Em todos os exemplos apresentados neste cápitulo é notada a melhora ou igual resultado quando se utiliza o decodificador com a técnica de armadilha adaptativa. Tal fato se deve, conforme mencionado no Capítulo ~\ref{cap:codigos corretores de erros em surto}, à sua armadilha não possuir tamanho fixo e ser capaz de corrigir surtos de comprimentos maiores em relação ao de armadilha fixa.

Para o Exemplo ~\ref{ex:imagem2} tem-se $b=9$, logo os surtos são reduzidos a comprimento nove ou menor. O decodificador de armadilha fixa se limita na correção dos surtos de comprimento cinco ou menor enquanto o de armadilha adaptativa comete erro apenas para 5,63 \% dos surtos de comprimento $b=8$ e 12,78 \% dos surtos de comprimento $b=9$ conforme apresentado na Tabela ~\ref{tab:tabelaC21-7-1}, logo um maior desempenho quando comparado ao de armadilha fixa.

\subsection{Adição de quantidade fixa de manchas}\label{sec:exemp_newimg}

Para este caso considera-se a mesma imagem da Figura ~\ref{fig:imagemoriginalecodifi1} (a) como imagem a ser transmitida. Bem como na Seção ~\ref{sec:exemp_oldimg}, a matriz decimal da imagem é convertida para uma matriz binária, ajustada aos parâmetros do código e dividida em blocos. Cada bloco é codificado e entrelaçado, como descrito nas Seções ~\ref{sec:sistemadesenvolvido} e ~\ref{sec:entrelacador}. Após, é feito um armazenamento desses blocos até que toda a matriz seja codificada e entrelaçada. Essa matriz possui dimensões $147 \times 3087$. A Figura ~\ref{fig:imagemoriginalecodifi1} (c) representa a imagem até este passo.

A seguir é examinada a situação na qual um número fixo de manchas é adicionado à imagem transmitida, podendo cada mancha assumir qualquer posição na imagem, sendo possível inclusive haver superposição de manchas. Em seguida, a matriz é novamente dividida em blocos para ser desentrelaçada e decodificada pelas técnicas de decodificação aqui estudadas. Finalizado o ataque, pode-se reconstruir a imagem, pela conversão de seus elementos binários em decimais.

A seguir seguem exemplos deste tipo de soma. Mantendo um padrão com o esquema descrito na seção anterior, considera-se os seguintes exemplos: Exemplo ~\ref{ex:imagem5} adição de manchas com moldura quadrada de dimensão $a=7$, Exemplo ~\ref{ex:imagem6} adição de manchas com moldura retangular de dimensões $a=8$ e $b=9$ e Exemplo ~\ref{ex:imagem7} adição de manchas com moldura em cruz de dimensões $a=10$ e $b=10$. Para cada tipo de moldura considera-se dois experimentos: um com a adição de 1000 manchas e outro com a adição de 2000 manchas em qualquer local da matriz de dimensões $147\times3087$.

\newpage
O Exemplo ~\ref{ex:imagem5} segue os parâmetros do Exemplo ~\ref{ex:imagem1}, com a adição de 1000 manchas.



\begin{example}
\label{ex:imagem5}

As Figuras ~\ref{fig:imagemNdeseNdecod5} e  ~\ref{fig:imagemAdapNAdap5} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}, para o caso da adição de 1000 manchas com moldura quadrada e dimensão $a=7$.


\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_decod_5.eps}
\caption{Exemplo de imagem afetada por 1000 manchas com moldura quadrada e dimensão $a=7$. Imagem reconstruída com os bits de informação da imagem não decodificada}.

\label{fig:imagemNdeseNdecod5}
\end{figure}


\begin{figure}[!h]
\center
\subfigure[\label{fig:a}][Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_5.eps}}
\qquad
\subfigure[b][Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_5.eps}}
\caption{Exemplo de imagem afetada por 1000 manchas com moldura quadrada e dimensão $a=7$. Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b)}
\label{fig:imagemAdapNAdap5}
\end{figure}
\end{example}


Ao realizar a contagem do \emph{pixels} diferentes, a imagem da Figura ~\ref{fig:imagemAdapNAdap5} obtida pelo decodificador de armadilha adaptativa (a), possui 845 \emph{pixels} diferentes, ou seja, 5,16 \% dos \emph{pixels} totais. Enquanto a imagem obtida pelo decodificador de armadilha fixa (b) apresenta um total de 1989 pixels diferentes em relação à imagem original, ou seja, 12,14 \% dos pixels totais.  Já a imagem da Figura ~\ref{fig:imagemNdeseNdecod5} (b), na qual não sofreu decodificação possui um total de 4154 \emph{pixels} diferentes em relação à imagem original, ou seja, 25,35 \% dos \emph{pixels} totais.

O procedimento do Exemplo ~\ref{ex:imagem5} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfinal5}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição de 1000 manchas com moldura quadrada e de dimensão $a=7$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	5,16\%&	12,14\%&	25,35\%\\ \hline
2&	5,24\%&	12,04\%&	25,52\%\\ \hline
3&	4,27\%&	10,33\%&	24,50\%\\ \hline
4&	5,16\%&	11,59\%&	26,33\% \\ \hline
5&	4,68\%&	11,93\%&	24,93\%\\ \hline
6&	5,05\%&	12,62\%&	25,63\%\\ \hline
7&	4,86\%&	12,40\%&	25,02\%\\ \hline
8&	5,36\%&	12,79\%&	24,74\%\\ \hline
9&	4,05\%&	10,72\%&	23,79\%\\ \hline
10&	4,98\%&	12,31\%&    26,39\%\\ \hline \hline
\textbf{Média}&	4,88\%&	11,89\%&	25,20\%\\ \hline
\textbf{Desvio Padrão}&	8,00 E-01 &4,30 E-01&	8,00 E-01\\ \hline

\end{tabular}
\label{tabelaerrosfinal5}
\end{center}\end{table}

\newpage
Seguindo o mesmo raciocínio, adicionou-se 2000 manchas com os mesmos parâmetros do Exemplo ~\ref{ex:imagem5}. Após 10 repetições obteve-se os dados da Tabela ~\ref{tabelaerrosfinal6}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição de 2000 manchas com moldura quadrada e de dimensão $a=7$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	16,86\%&	34,84\%&	44,81\%\\ \hline
2&	15,81\%&	34,63\%&	43,33\%\\ \hline
3&	16,71\%&	34,34\%&	43,19\%\\ \hline
4&	16,67\%&	33,82\%&	42,88\% \\ \hline
5&	15,78\%&	32,17\%&	45,79\%\\ \hline
6&	15,77\%&	32,57\%&	42,21\%\\ \hline
7&	16,74\%&	34,86\%&	41,91\%\\ \hline
8&	16,00\%&	34,29\%&	42,78\%\\ \hline
9&	16,60\%&	34,18\%&	44,54\%\\ \hline
10&	15,29\%&	32,90\%&    43,82\%\\ \hline \hline
\textbf{Média}&	16,22\%&	33,86\%&	43,53\%\\ \hline
\textbf{Desvio Padrão}&	5,50 E-01 &9,70 E-01&	1,22 E-00\\ \hline

\end{tabular}
\label{tabelaerrosfinal6}
\end{center}\end{table}

\newpage

O Exemplo ~\ref{ex:imagem6} segue os mesmos parâmetros do Exemplo ~\ref{ex:imagem2}, com a adição de 1000 manchas.

\begin{example}
\label{ex:imagem6}

As Figuras ~\ref{fig:imagemNdeseNdecod6} e  ~\ref{fig:imagemAdapNAdap6} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}, para o caso da adição de 1000 manchas com moldura retangular e dimensões $a=8$ e $b=9$.


\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_decod_6.eps}
\caption{Exemplo de imagem afetada por 1000 manchas de moldura retangular com dimensões $a=8$ e $b=9$. Imagem reconstruída com os bits de informação da imagem não decodificada}.
\label{fig:imagemNdeseNdecod6}
\end{figure}



\begin{figure}[!h]
\center
\subfigure[\label{fig:a}][Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_6.eps}}
\qquad
\subfigure[b][Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_6.eps}}
\caption{Exemplo de imagem afetada por 1000 manchas de moldura retangular com dimensões $a=8$ e $b=9$. Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b)}
\label{fig:imagemAdapNAdap6}
\end{figure}
\end{example}


Ao realizar a contagem do \emph{pixels} diferentes, a imagem da Figura ~\ref{fig:imagemAdapNAdap6} obtida pelo decodificador de armadilha adaptativa (a), possui 1743 \emph{pixels} diferentes, ou seja, 10,64 \% dos \emph{pixels} totais. Enquanto a imagem obtida pelo decodificador de armadilha fixa (b) apresenta um total de 4799 pixels diferentes em relação à imagem original, ou seja, 29,29 \% dos pixels totais.  Já a imagem da Figura ~\ref{fig:imagemNdeseNdecod6} (b), na qual não sofreu decodificação possui um total de 5268 \emph{pixels} diferentes em relação à imagem original, ou seja, 32,15 \% dos \emph{pixels} totais.

O procedimento do Exemplo ~\ref{ex:imagem6} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfinal7}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição de 1000 manchas com moldura retangular e dimensões $a=8$ e $b=9$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	10,64\%&	29,29\%&	32,15\%\\ \hline
2&	10,25\%&	29,13\%&	32,93\%\\ \hline
3&	10,50\%&	29,16\%&	32,27\%\\ \hline
4&	10,24\%&	29,78\%&	32,56\% \\ \hline
5&	10,19\%&	29,73\%&	33,43\%\\ \hline
6&	10,03\%&	29,43\%&	32,76\%\\ \hline
7&	10,54\%&	29,79\%&	31,52\%\\ \hline
8&	10,10\%&	29,26\%&	33,36\%\\ \hline
9&	9,50\%&	    29,57\%&	33,95\%\\ \hline
10&	10,28\%&	29,00\%&    32,51\%\\ \hline \hline
\textbf{Média}&	10,23\%&	29,41\%&	32,75\%\\ \hline
\textbf{Desvio Padrão}&	3,20 E-01 &2,90 E-01&	7,10 E-01\\ \hline

\end{tabular}
\label{tabelaerrosfinal7}
\end{center}\end{table}

\newpage

Seguindo o mesmo raciocínio, adicionou-se 2000 manchas com os mesmos parâmetros do Exemplo ~\ref{ex:imagem5}. Após 10 repetições obteve-se os dados da Tabela ~\ref{tabelaerrosfinal8}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição de 2000 manchas com moldura retangular e dimensões $a=8$ e $b=9$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	28,71\%&	56,37\%&	54,74\%\\ \hline
2&	28,00\%&	55,68\%&	54,10\%\\ \hline
3&	28,61\%&	56,38\%&	53,94\%\\ \hline
4&	28,19\%&	57,12\%&	54,22\% \\ \hline
5&	28,80\%&	55,39\%&	53,95\%\\ \hline
6&	28,83\%&	55,89\%&	53,68\%\\ \hline
7&	28,48\%&	55,76\%&	55,09\%\\ \hline
8&	28,22\%&	55,22\%&	55,24\%\\ \hline
9&	28,17\%&	54,81\%&	53,69\%\\ \hline
10&	28,34\%&	55,39\%&    55,08\%\\ \hline \hline
\textbf{Média}&	28,43\%&	55,80\%&	54,37\%\\ \hline
\textbf{Desvio Padrão}&	2,90 E-01 &6,70 E-01&	6,10 E-00\\ \hline

\end{tabular}
\label{tabelaerrosfinal8}
\end{center}\end{table}

\newpage

O Exemplo ~\ref{ex:imagem7} segue os mesmos parâmetros do Exemplo ~\ref{ex:imagem3}, com a adição de 1000 manchas.

\begin{example}
\label{ex:imagem7}

As Figuras ~\ref{fig:imagemNdeseNdecod7} e  ~\ref{fig:imagemAdapNAdap7} ilustram a sequência de imagens ao longo do esquema da Figura ~\ref{sec:sistemadesenvolvido}, para o caso da adição de 1000 manchas com moldura em cruz e dimensões $a=10$ e $b=10$.


\begin{figure}[!h]
\center
\includegraphics[scale=0.5]{N_decod_7.eps}
\caption{Exemplo de imagem afetada por 1000 manchas de moldura em cruz com dimensões $a=10$ e $b=10$. Imagem reconstruída com os bits de informação da imagem não decodificada}.
\label{fig:imagemNdeseNdecod7}
\end{figure}



\begin{figure}[!h]
\center
\subfigure[\label{fig:a}][Imagem decodificada por armadilha adptativa]{\includegraphics[width=0.4\linewidth]{decod_A_7.eps}}
\qquad
\subfigure[b][Imagem decodificada por armadilha fixa]{\includegraphics[width=0.4\linewidth]{decod_N_7.eps}}
\caption{Exemplo de imagem afetada por 1000 manchas de moldura em cruz com dimensões $a=10$ e $b=10$. Imagem reconstruída com os bits de informação obtidos pelos decodificadores de armadilha adaptativa (a) e o de armadilha fixa (b)}
\label{fig:imagemAdapNAdap7}
\end{figure}
\end{example}


Ao realizar a contagem do \emph{pixels} diferentes, a imagem da Figura ~\ref{fig:imagemAdapNAdap7} obtida pelo decodificador de armadilha adaptativa (a), possui 2319 \emph{pixels} diferentes, ou seja, 14,15 \% dos \emph{pixels} totais. Enquanto a imagem obtida pelo decodificador de armadilha fixa (b) apresenta um total de 6108 pixels diferentes em relação à imagem original, ou seja, 37,28 \% dos pixels totais.  Já a imagem da Figura ~\ref{fig:imagemNdeseNdecod7} (b), na qual não sofreu decodificação possui um total de 6557 \emph{pixels} diferentes em relação à imagem original, ou seja, 40,02 \% dos \emph{pixels} totais.

O procedimento do Exemplo ~\ref{ex:imagem7} foi repetido mais nove vezes gerando os dados da Tabela ~\ref{tabelaerrosfinal9}.

\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição de 1000 manchas com moldura em cruz e dimensões $a=10$ e $b=10$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	14,15\%&	37,28\%&	40,02\%\\ \hline
2&	15,80\%&	39,00\%&	38,89\%\\ \hline
3&	15,70\%&	39,22\%&	38,41\%\\ \hline
4&	16,27\%&	40,37\%&	40,84\% \\ \hline
5&	15,99\%&	38,02\%&	38,29\%\\ \hline
6&	16,54\%&	38,78\%&	41,05\%\\ \hline
7&	15,06\%&	38,24\%&	39,02\%\\ \hline
8&	15,95\%&	39,67\%&	39,95\%\\ \hline
9&	16,00\%&	39,25\%&	38,90\%\\ \hline
10&	15,35\%&	38,04\%&    38,63\%\\ \hline \hline
\textbf{Média}&	15,68\%&	38,79\%&	39,41\%\\ \hline
\textbf{Desvio Padrão}&	6,80 E-01 &9,10 E-01&	9,90 E-01\\ \hline

\end{tabular}
\label{tabelaerrosfinal9}
\end{center}\end{table}

\newpage

Seguindo o mesmo raciocínio, adicionou-se 2000 manchas com os mesmos parâmetros do Exemplo ~\ref{ex:imagem6}. Após 10 repetições obteve-se os dados da Tabela ~\ref{tabelaerrosfinal10}.


\begin{table}
\caption {Percentual do número de pixels diferentes em relação à imagem original para o decodificador por armadilha adaptativa, o decodificador por armadilha fixa e antes da decodificação. Realizada a adição de 2000 manchas com moldura em cruz e dimensões $a=10$ e $b=10$.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Amostra} & \textbf{Percentual} & \textbf{Percentual} & \textbf{Percentual} \\
   & \textbf{Armadilha Adaptativa} & \textbf{Armadilha Fixa} & \textbf{Antes da decodificação}\\ \hline
1&	39,22\%&	66,66\%&	61,32\%\\ \hline
2&	40,20\%&	67,98\%&	63,52\%\\ \hline
3&	39,58\%&	67,44\%&	61,06\%\\ \hline
4&	39,69\%&	67,36\%&	62,79\% \\ \hline
5&	40,03\%&	68,40\%&	62,62\%\\ \hline
6&	39,42\%&	68,27\%&	62,43\%\\ \hline
7&	37,67\%&	65,78\%&	61,82\%\\ \hline
8&	40,86\%&	68,42\%&	64,28\%\\ \hline
9&	38,98\%&	66,48\%&	62,45\%\\ \hline
10&	38,80\%&	67,02\%&    61,41\%\\ \hline \hline
\textbf{Média}&	39,24\%&	67,38\%&	62,37\%\\ \hline
\textbf{Desvio Padrão}&	8,70 E-01 &9,00 E-01&	1,01 E-00\\ \hline

\end{tabular}
\label{tabelaerrosfinal10}
\end{center}\end{table}

Nesta seção, obteve-se resultados em que cada mancha é inserida em qualquer local da matriz. O tamanho da mancha determina a quantidade máxima de manchas que podem ser inseridas no arranjo matricial. A matriz a ser adicionado as manchas possui uma dimensão de $147\times3087$. Para uma melhor visualização do efeito da adição de 1000 e 2000 manchas a matriz da imagem, a Tabela ~\ref{tabelaqtderros} relaciona a dimensão da mancha com a quantidade máxima que pode ser inserida na matriz. Os valores percentuais apresentados para 1000 e 2000 manchas dão a idéia da quantidade de erros que é inserido na matriz.

\begin{table}
\caption {Quantidade máxima de cada tipo de mancha que pode ser adicionada a matriz total da imagem e valores percentuais que representam a adição de 1000 e 2000 manchas.}
\begin{center}
\begin{tabular}{|c|c|c|c|} \hline


\textbf{Tipo da} & \textbf{Quantidade} & \textbf{Percentual} & \textbf{Percentual} \\
\textbf{moldura e dimensão(ões)}   & \textbf{Máxima} & \textbf{ 1000 manchas} & \textbf{2000 manchas}\\ \hline
quadrada a= 7 & 9241  &	10,81\%&	21,60\%\\ \hline
retangular a= 8 e b=9 & 6174  &	16,20\%&	32,40\%\\ \hline
cruz a=10 e b=10 & 4312  &	23,19\%&	46,38\%\\ \hline

\end{tabular}
\label{tabelaqtderros}
\end{center}\end{table}

{\color{white}.}\\
{\color{white}.}\\
{\color{white}.}\\
{\color{white}.}\\
{\color{white}.}\\
{\color{white}.}\\

Pela análise das Tabelas ~\ref{tabelaerrosfina4} a ~\ref{tabelaerrosfinal7} percebe-se a melhora na correção para o decodificador por armadilha adaptativa em relação ao de armadilha fixa. Tal fato se deve pelo método adaptativo ser capaz de corrigir surtos com comprimentos maiores em relação ao não-adaptativo. No entanto, para as Tabelas ~\ref{tabelaerrosfinal8} \ a ~\ref{tabelaerrosfinal10} a decodificação por armadilha fixa removeu uma quantidade não representativa dos erros ou, em piores casos, adicionou mais erros a matriz. Isto ocorre devido ao comprimento  dos surtos inseridos ultrapassarem a capacidade de correção do código. Quando isso ocorre, o código na tentativa de corrigir os erros inseridos acaba por inserir mais erros e danificar ainda mais a palavra-código. O próximo capítulo apresenta a conclusão do trabalho desenvolvido.


%%%%%%%%%%%%%%%%%%%%%% FIM DA SEÇÃO - FIM DO CAPÍTULO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 